package neptune.module.impl.exploit;

import meteordevelopment.orbit.EventHandler;
import neptune.event.events.TickEvent;
import neptune.module.api.Mod;
import neptune.module.api.Category;
import neptune.setting.BooleanSetting;
import neptune.setting.NumberSetting;
import net.minecraft.block.BlockState;
import net.minecraft.block.Blocks;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.entity.vehicle.BoatEntity;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class BoatModifier extends Mod {


    private final NumberSetting height = new NumberSetting("Height", 0, 20, 1.5, 0.5);
    private final BooleanSetting iceSpoof = new BooleanSetting("ice-spoof (!)", false);


    public BoatModifier() {
        super("Boat-Modifier", "Allows you to modify the way your boat works", Category.EXPLOIT);
        addSettings(height, iceSpoof);
    }

    @EventHandler
    public void onTick(TickEvent event) {
        if (mc.world == null) return; if (mc.player == null) return;
        if(mc.player.getVehicle() instanceof BoatEntity) {
            mc.player.getVehicle().setStepHeight(height.getValuefloat()); // Set step height

            //Spoof Ice Below you
            if (iceSpoof.isEnabled()) {
                spoofIce(mc.player);
            }
            //todo remove all the ice we spoofed when the module is disabled or when icespoof is not enabled
        }
    }



    public void spoofIce(PlayerEntity player) {
        if (mc.world == null) return; if (mc.player == null) return;
        World world = player.getEntityWorld();
        BlockPos playerPos = player.getBlockPos();
        BlockState iceBlockState = Blocks.ICE.getDefaultState();

        if (!world.getBlockState(playerPos).equals(iceBlockState) && !world.getBlockState(playerPos).equals(Blocks.AIR.getDefaultState())) {
            world.setBlockState(playerPos, iceBlockState, 3);
            //set the blocks around the playerpos to ice
            for (int x = -1; x <= 1; x++) {
                for (int y = -1; y <= 1; y++) {
                    for (int z = -1; z <= 1; z++) {
                        //if those blocks are air ignore them
                        if (world.getBlockState(playerPos.add(x, y - 1, z)).equals(Blocks.AIR.getDefaultState())) {
                            continue;
                        }
                        world.setBlockState(playerPos.add(x, y - 1, z), iceBlockState, 3);
                    }
                }
            }
        }
    }
}
