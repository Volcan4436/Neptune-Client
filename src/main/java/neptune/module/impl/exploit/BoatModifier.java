package neptune.module.impl.exploit;

import io.github.nevalackin.radbus.Listen;
import neptune.event.impl.game.TickEvent;
import neptune.module.api.Flags;
import neptune.module.api.Module;
import neptune.module.api.ModuleInfo;
import neptune.setting.impl.BooleanSetting;
import neptune.setting.impl.NumberSetting;
import net.minecraft.block.BlockState;
import net.minecraft.block.Blocks;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.entity.vehicle.BoatEntity;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

@ModuleInfo(description = "Allows you to modify the way your boat works", flags = {Flags.UNSAFE})
public class BoatModifier extends Module {
    private final NumberSetting height = new NumberSetting("Height", 1.5, 0, 20, 0.5);
    private final BooleanSetting iceSpoof = new BooleanSetting("ice-spoof");

    public BoatModifier() {
        addSettings(height, iceSpoof);
    }

    @Listen
    public void onTick(TickEvent event) {
        if (mc.player.getVehicle() instanceof BoatEntity boat) {
            boat.setStepHeight(height.getValueFloat()); // Set step height

            // Spoof Ice Below you
            if (iceSpoof.isEnabled())
                spoofIce(mc.player);

            // TODO: remove all the ice we spoofed when the module is disabled or when icespoof is not enabled
        }
    }

    public void spoofIce(PlayerEntity player) {
        World world = player.getEntityWorld();
        BlockPos playerPos = player.getBlockPos();
        BlockState iceBlockState = Blocks.ICE.getDefaultState();

        if (!world.getBlockState(playerPos).equals(iceBlockState) && !world.getBlockState(playerPos).equals(Blocks.AIR.getDefaultState())) {
            world.setBlockState(playerPos, iceBlockState, 3);
            //set the blocks around the playerpos to ice
            for (int x = -1; x <= 1; x++) {
                for (int y = -1; y <= 1; y++) {
                    for (int z = -1; z <= 1; z++) {
                        //if those blocks are air ignore them
                        if (world.getBlockState(playerPos.add(x, y - 1, z)).equals(Blocks.AIR.getDefaultState()))
                            continue;
                        world.setBlockState(playerPos.add(x, y - 1, z), iceBlockState, 3);
                    }
                }
            }
        }
    }
}